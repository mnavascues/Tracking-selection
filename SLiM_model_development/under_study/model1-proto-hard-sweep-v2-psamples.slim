// V2 - explicitly declare 2 subpopulations and make it as 2 temporal samples
initialize() {
	initializeMutationRate(1e-7); 	
	initializeMutationType("m1", 0.5, "f", 0.0); // neutral
	initializeMutationType("m2", 0.5, "f", 0.8); // beneficial
	m2.convertToSubstitution = F; // add this to the main model1 code
	m1.color = "gray40";
	m2.color = "green";
	m1.colorSubstitution = "gray20";
	m2.colorSubstitution = "darkgreen";
	
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElementType("g2", m1, 1.0);
	g1.color = "black";
	g2.color = "black";	
	initializeGenomicElement(g1, 0, 49999);
	initializeGenomicElement(g2, 50001, 99999);
	
	initializeRecombinationRate(c(1e-8, 0.5, 1e-8), c(49999, 50000, 99999));	

}

1 {
	sim.chromosome.colorSubstitution = "";
	sim.addSubpop("p0", 1000);
}

10000 late() {
	target = sample(p0.genomes, 1);
	target.addNewDrawnMutation(m2, 0);
}

10010 late(){

	u = p0.genomes;
	m = sortBy(unique(u.mutations), "position");
	p = m.position;
   i = m.id;
   c = m.selectionCoeff;

 	cat("\n\nsegsites: " + size(m) + "\n\n");  
   cat(paste("pos" + "\t" + "id" + "\t" + "selCoeff" + "\n"));
   cat(paste(p + "\t" + i + "\t" + c + "\n"));
	
	g = sample(p0.genomes, 2*10, F);
	for (genome in g)
	{
		hasMuts = (match(m, genome.mutations) >= 0);
		gt = asInteger(hasMuts);
		geno = gt +1;
		cat(paste(geno, "") + "\n");
	}
	
}

10011 late(){
	sim.addSubpopSplit("p1", 1000, p0); // This is necessary!!!
}

//10012 late(){
//	p0.setSubpopulationSize(0); // This is necessary!!!
//}

10020 late(){

	u = p1.genomes;
	m = sortBy(unique(u.mutations), "position");
	p = m.position;
   i = m.id;
   c = m.selectionCoeff;

 	cat("\n\nsegsites: " + size(m) + "\n\n");  
   cat(paste("pos" + "\t" + "id" + "\t" + "selCoeff" + "\n"));
   cat(paste(p + "\t" + i + "\t" + c + "\n"));
	
	g = sample(p1.genomes, 2*10, F);
	for (genome in g)
	{
		hasMuts = (match(m, genome.mutations) >= 0);
		gt = asInteger(hasMuts);
		geno = gt +1;
		cat(paste(geno, "") + "\n");
	}
	
	sim.simulationFinished();
	
}

//	match(ia,ib); // voltar aqui depois

// global variable with all mutations to cross ref at the end of simulation mutations in the 1st and 2nd samples
// For loop to add genomes in table format
// is there a probem with sampling genomes rather than individuals?






