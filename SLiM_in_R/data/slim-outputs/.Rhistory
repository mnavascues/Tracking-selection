dir()
nsim = 10;
ne <- as.integer(runif(nsim, 100, 1000));
ne
n  <- as.integer(rep(100, nsim));
n
mur <- mur = rep(2.5e-8, nsim);
mur
mur <- rep(2.5e-8, nsim);
mur
mud1 <- rep(0.5, nsim);
mud1
mufv1 <- rep(0.0, nsim);
mufv1
?round
mufv1
round(0, digits = 2)
round(0, digits = -2)
temp <- cbind(1:nsim, ne, n, sprintf("%1.1e",mur), sprintf("%.1f",mud1), sprintf("%.1f",mufv1), sprintf("%.1f",mud2), sprintf("%.1f", mufv2), ts1, int12, ts2);
ne <- as.integer(runif(nsim, 100, 1000));
n  <- as.integer(rep(100, nsim));
mur <- rep(2.5e-8, nsim);#
mud1 <- rep(0.5, nsim);
mufv1 <- rep(0.0, nsim);#
mud2 <- rep(0.5, nsim);
mufv2 <- rep(0.5, nsim);#
ts1 <- as.integer(rep(10, nsim));
int12 <- as.integer(rep(10, nsim));
mur
mud1
mufv1
mud2
mufv2
ts1
int12
temp <- cbind(1:nsim, ne, n, sprintf("%1.1e",mur), sprintf("%.1f",mud1), sprintf("%.1f",mufv1), sprintf("%.1f",mud2), sprintf("%.1f", mufv2), ts1, int12, ts2);
simnumb <- 1:nsim
simnumb
ts2 <- as.integer(ts1 + ts2);
ts2 <- as.integer(ts1 + int12);
temp <- cbind(simnumb, ne, n, sprintf("%1.1e",mur), sprintf("%.1f",mud1), sprintf("%.1f",mufv1), sprintf("%.1f",mud2), sprintf("%.1f", mufv2), ts1, int12, ts2);
temp
colnames(parm) <- c("Sim", "NE", "sampleS", "murate", "neuDom", "neuFitness",
"benDom", "benFitness", "sampleT1", "INT12", "sampleT2");
colnames(temp) <- c("Sim", "NE", "sampleS", "murate", "neuDom", "neuFitness",
"benDom", "benFitness", "sampleT1", "INT12", "sampleT2");
paste(temp, "")
print(temp, quote = FALSE)
as.matrix(temp, quote = FALSE)
print(temp, quote = FALSE)
parm <- print(temp, quote = FALSE)
parm
mur <- sprintf("%1.1e", rep(2.5e-8, nsim));#
mur
mud1 <- sprintf("%.1f", rep(0.5, nsim));#
mud1
mufv1 <- sprintf("%.1f",rep(0.0, nsim));#
mufv1
mud2 <- sprintf("%.1f", rep(0.5, nsim));#
mufv2 <- sprintf("%.1f", rep(0.5, nsim));#
mufv2
temp <- cbind(simnumb, ne, n, mur, mud1, mufv1, mud2, mufv2, ts1, int12, ts2);
temp
colnames(temp) <- c("Sim", "NE", "sampleS", "murate", "neuDom", "neuFitness",
"benDom", "benFitness", "sampleT1", "INT12", "sampleT2");
temp
parm <- as.data.frame(temp)
parm
tttest <- (10*ne + 10)
tttest
tttest <- as.integer((10*ne + runif(nsim, 10, 30)));
tttest
simnumb <- 1:nsim;
ne <- as.integer(runif(nsim, 100, 1000));
n  <- as.integer(rep(100, nsim));
mur <- sprintf("%1.1e", rep(2.5e-8, nsim));
mud1 <- sprintf("%.1f", rep(0.5, nsim));
mufv1 <- sprintf("%.1f", rep(0.0, nsim));
mud2 <- sprintf("%.1f", rep(0.5, nsim));
mufv2 <- sprintf("%.1f", rep(0.5, nsim));
ts1 <- as.integer((10*ne + 10));
int12 <- as.integer(rep(10, nsim));
ts2 <- as.integer(ts1 + int12);
parm <- cbind(simnumb, ne, n, mur, mud1, mufv1, mud2, mufv2, ts1, int12, ts2);
colnames(parm) <- c("Sim", "NE", "sampleS", "murate", "neuDom", "neuFitness",
"benDom", "benFitness", "sampleT1", "INT12", "sampleT2");
priors <- as.data.frame(parm)
priors
ts1 <- as.integer(rep(10, nsim));
ts1
ts1t <- as.integer((10*ne + ts1));
ts1t
ne
parm <- cbind(simnumb, ne, n, mur, mud1, mufv1, mud2, mufv2, ts1, tst1, int12, ts2, ts2t);
simnumb <- 1:nsim;
ne <- as.integer(runif(nsim, 100, 1000));
n  <- as.integer(rep(100, nsim));
mur <- sprintf("%1.1e", rep(2.5e-8, nsim));
mud1 <- sprintf("%.1f", rep(0.5, nsim));
mufv1 <- sprintf("%.1f", rep(0.0, nsim));
mud2 <- sprintf("%.1f", rep(0.5, nsim));
mufv2 <- sprintf("%.1f", rep(0.5, nsim));
ts1 <- as.integer(rep(10, nsim));
ts1t <- as.integer((10*ne + ts1));
int12 <- as.integer(rep(10, nsim));
ts2 <- as.integer(ts1 + int12);
ts2t <- as.integer(ts1t + int12);
parm <- cbind(simnumb, ne, n, mur, mud1, mufv1, mud2, mufv2, ts1, tst1, int12, ts2, ts2t);
parm <- cbind(simnumb, ne, n, mur, mud1, mufv1, mud2, mufv2, ts1, ts1t, int12, ts2, ts2t);
colnames(parm) <- c("Sim", "NE", "sampleS", "murate", "neuDom", "neuFitness",
"benDom", "benFitness", "sampleT1","Time1", "INT12", "sampleT2", "Time2");
priors <- as.data.frame(parm)
priors
length(priors)
width(priors)
?length
data=prior[,1]
data=priors[,1]
data
priors <- as.matrix(as.data.frame(parm))
data=priors[,1]
data
priors
simnumb <- 1:nsim;
ne <- as.integer(runif(nsim, 100, 1000));
n  <- as.integer(rep(100, nsim));
mur <- rep(2.5e-8, nsim); #
mud1 <- rep(0.5, nsim); #
mufv1 <- rep(0.0, nsim); #
mud2 <- rep(0.5, nsim); #
mufv2 <- rep(0.5, nsim); #
ts1 <- as.integer(rep(10, nsim));
ts1t <- as.integer((10*ne + ts1));
int12 <- as.integer(rep(10, nsim));
ts2 <- as.integer(ts1 + int12);
ts2t <- as.integer(ts1t + int12);
priors <- cbind(simnumb, ne, n, mur, mud1, mufv1, mud2, mufv2, ts1, ts1t, int12, ts2, ts2t);
colnames(priors) <- c("Sim", "NE", "sampleS", "murate", "neuDom", "neuFitness",
"benDom", "benFitness", "sampleT1","Time1", "INT12", "sampleT2", "Time2");
data=priors[,1]
data
dim(priors)
dim(priors)[1]
dim(data)[1]
data=priors
dim(data)[1]
simnumb <- 1:nsim;
ne <- as.integer(runif(nsim, 100, 1000));
n  <- as.integer(rep(100, nsim));
mur <- rep(2.5e-8, nsim); #
mud1 <- rep(0.5, nsim); #
mufv1 <- rep(0.0, nsim); #
mud2 <- rep(0.5, nsim); #
mufv2 <- rep(0.5, nsim); #
ts1 <- as.integer(rep(10, nsim));
ts1t <- as.integer((10*ne + ts1));
int12 <- as.integer(rep(10, nsim));
ts2 <- as.integer(ts1 + int12);
ts2t <- as.integer(ts1t + int12);
priors <- cbind(simnumb, ne, n, mur, mud1, mufv1, mud2, mufv2, ts1, ts1t, int12, ts2, ts2t);
colnames(priors) <- c("Sim", "NE", "sampleS", "murate", "neuDom", "neuFitness",
"benDom", "benFitness", "sampleT1","Time1", "INT12", "sampleT2", "Time2");
priors
source("src/create_slim_infile.r");
sessionInfo()$running;
sessionInfo()$platform;
R.version.string;
.Platform$GUI;
sessionInfo()$running;
sessionInfo()$platform;
R.version.string;
.Platform$GUI;
library(plyr); # for the convertEggLib function
sessionInfo()$otherPkgs$plyr$Version;
recordSessionInfo <- sessionInfo();
working_dir <- "/Users/vitorpavinato/Documents/My_repositories/Tracking-selection/SLiM_in_R"
if (is.na(match(working_dir,getwd()))){
setwd(working_dir)
} else {
print("Working directory have already been set")
};
save(recordSessionInfo,file="results/sessionInfo.RData");
save.image(file = "results/workspaceFile.RData");
nsim <- 10;
sim_ne <- as.integer(runif(nsim, 100, 1000));
sim_seed <- as.integer(runif(nsim, 100000000, 900000000));
priors <- as.data.frame(cbind(sim=1:nsim, seed=sim_seed,ne=sim_ne));
source("src/create_slim_infile.r");
ifelse(file.exists(dir("results/slim-infiles/", pattern = ".slim$", full.names = TRUE)),
file.remove(dir("results/slim-infiles/", pattern = ".slim$", full.names = TRUE)), NULL);
createslim <- model1(      ne = sim_ne,
filename = "infile_slim",
folder = "results/slim-infiles/",
output = "output_slim",
folderout = "results/slim-outputs");
source("src/slim.r");
ifelse(file.exists(dir('results/slim-outputs/', pattern = "output_slim_", full.names = TRUE)),
file.remove(dir('results/slim-outputs/', pattern = "output_slim_", full.names = TRUE)), NULL);
ifelse(file.exists(dir('results/slim-outputs/', pattern = "outfile_slim_", full.names = TRUE)),
file.remove(dir('results/slim-outputs/', pattern = "outfile_slim_", full.names = TRUE)), NULL);
slim(     seed = sim_seed,
outfile = 'outfile_slim',
folderout = 'results/slim-outputs/',
infile = 'infile_slim',
folderin = 'results/slim-infiles/');
ifelse(file.exists(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)),
file.remove(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)), NULL)
system.time(converteddata <- convertEggLib(     nsim = 10,
output = "input_egglib" ,
folderout = "results/egglib-inputs/",
input = "output_slim",
folderin = "results/slim-outputs/"));
ifelse(file.exists(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)),
file.remove(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)), NULL)
converteddata <- convertEggLib(     nsim = 10,
output = "input_egglib" ,
folderout = "results/egglib-inputs/",
input = "output_slim",
folderin = "results/slim-outputs/");
1:nsim
for(i in 1:nsim){
f1 <- paste0(input,"_", i,"_","mutInfo_t1.txt");
inft1 <- read.table(paste0(folderin,f1), header = TRUE);
f2 <- paste0(input,"_", i,"_","genotypes_t1.txt");
gnt1 <- read.table(paste0(folderin,f2), header = FALSE);
gnt1 <- t(gnt1);
snpindex1 = seq(from=1, to=dim(gnt1)[1], by=1); rownames(gnt1) <- paste(snpindex1);
iindex1 = seq(from=1, to=dim(gnt1)[2], by=1); colnames(gnt1) <- paste0("indiv",iindex1,"@pop1", "")
sp1 <- cbind(inft1,gnt1); sp1 <- sp1[,-c(3,4)];
f3 <- paste0(input,"_", i,"_","mutInfo_t2.txt")
inft2 <- read.table(paste0(folderin,f3), header = TRUE)
f4 <- paste0(input,"_", i,"_","genotypes_t2.txt")
gnt2 <- read.table(paste0(folderin,f4), header = FALSE)
gnt2 <- t(gnt2)
snpindex2 = seq(from=1, to=dim(gnt2)[1], by=1); rownames(gnt2) <- paste(snpindex2)
iindex2 = seq(from=1, to=dim(gnt2)[2], by=1); colnames(gnt2) <- paste0("indiv",iindex2,"@pop2", "")
sp2 <- cbind(inft2,gnt2); sp2 <- sp2[,-c(3,4)];
mrgdata <- merge(sp1, sp2, by.x= c(1,2,3,4,5), by.y = c(1,2,3,4,5), all=TRUE)
colnames(mrgdata)[4] <- "selection"
mrgdata[is.na(mrgdata)] <- "11"
mn <- matrix(data = NA, nrow = dim(mrgdata)[1], ncol = 1)
tm <- mrgdata[,-c(1,2,3,4,5)]
for(j in 1:length(mn)){
s <- sum(tm[j,] == 11)
mn[j] <- s
}
numcol = dim(tm)[2]
rm <- ifelse(mn < numcol & mn !=0, TRUE, FALSE)
newdata <- mrgdata[rm, ]
ss <- newdata$selection
ss[which(ss != 0 )] <- "Y"
ss[sample(which(ss ==0), round(select_freq*length(which(ss==0))))] <- "Y"
ss[which(ss == 0)] <- "N"
newdata$selection <- ss
outfile <- paste0(output,"_",i,".txt");
write.table(newdata, file = paste0(folderout,outfile), quote=FALSE, sep="\t", row.names = FALSE)
};
ifelse(file.exists(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)),
file.remove(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)), NULL)
converteddata <- convertEggLib(       nsim = 10,
select_freq = 0.3,
output = "input_egglib" ,
folderout = "results/egglib-inputs/",
input = "output_slim",
folderin = "results/slim-outputs/");
source("src/slim.r");
ifelse(file.exists(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)),
file.remove(dir('results/egglib-inputs/', pattern = "input_egglib_", full.names = TRUE)), NULL)
converteddata <- convertEggLib(       nsim = 10,
select_freq = 0.3,
output = "input_egglib" ,
folderout = "results/egglib-inputs/",
input = "output_slim",
folderin = "results/slim-outputs/");
ifelse(file.exists(dir('results/egglig-outputs/', pattern = "output_egglib_", full.names = TRUE)),
file.remove(dir('results/egglig-outputs/', pattern = "output_egglib_", full.names = TRUE)), NULL)
runEggLib(    output = "output_egglib",
folderout = "results/egglig-outputs/",
input = "input_egglib",
folderin = "results/egglib-inputs/",
pythonpath = '/Users/vitorpavinato/anaconda/bin/python',
sourcepath = 'src/summstats.py',
lss = c("He", "WCst"),
wss = c("S","thetaW","D"),
gss = c("He", "WCst","D"));
createslim
dir()
setwd("data/slim-outputs/")
f1 <- paste0("output_slim","_", 1,"_", "testdata", "_","mutInfo_t1.txt");
inft1 <- read.table(paste0(f1), header = TRUE);
inft1
f2 <- paste0("output_slim","_", 1,"_", "testdata", "_","genotypes_t1.txt");
gnt1 <- read.table(paste0(f2), header = FALSE);
gnt1 <- t(gnt1);
snpindex1 = seq(from=1, to=dim(gnt1)[1], by=1); rownames(gnt1) <- paste(snpindex1);
iindex1 = seq(from=1, to=dim(gnt1)[2], by=1); colnames(gnt1) <- paste0("indiv",iindex1,"@pop1", "")
sp1 <- cbind(inft1,gnt1)
sp1
sp1 <- cbind(inft1,gnt1); sp1 <- sp1[,-4];
sp1
f3 <- paste0("output_slim","_", 1,"_", "testdata", "_","mutInfo_t2.txt")
inft2 <- read.table(paste0(f3), header = TRUE)
inft2
f4 <- paste0("output_slim","_", 1,"_", "testdata", "_","genotypes_t2.txt")
gnt2 <- read.table(paste0(f4), header = FALSE)
gnt2 <- t(gnt2)
snpindex2 = seq(from=1, to=dim(gnt2)[1], by=1); rownames(gnt2) <- paste(snpindex2)
iindex2 = seq(from=1, to=dim(gnt2)[2], by=1); colnames(gnt2) <- paste0("indiv",iindex2,"@pop2", "")
sp2 <- cbind(inft2,gnt2); sp2 <- sp2[,-4];
sp2
mrgdata <- merge(sp1, sp2, by.x= c(1,2,3,4,5,6), by.y = c(1,2,3,4,5,6), all=TRUE)
mrgdata
f1 <- paste0("output_slim","_", 1,"_", "testdata", "_","mutInfo_t1.txt");
inft1 <- read.table(paste0(f1), header = TRUE);
inft1
f2 <- paste0("output_slim","_", 1,"_", "testdata", "_","genotypes_t1.txt");
gnt1 <- read.table(paste0(f2), header = FALSE);
gnt1 <- t(gnt1);
snpindex1 = seq(from=1, to=dim(gnt1)[1], by=1); rownames(gnt1) <- paste(snpindex1);
iindex1 = seq(from=1, to=dim(gnt1)[2], by=1); colnames(gnt1) <- paste0("indiv",iindex1,"@pop1", "")
sp1 <- cbind(inft1,gnt1); sp1 <- sp1[,-4];
f3 <- paste0("output_slim","_", 1,"_", "testdata", "_","mutInfo_t2.txt")
inft2 <- read.table(paste0(f3), header = TRUE)
inft2
f4 <- paste0("output_slim","_", 1,"_", "testdata", "_","genotypes_t2.txt")
gnt2 <- read.table(paste0(f4), header = FALSE)
gnt2 <- t(gnt2)
snpindex2 = seq(from=1, to=dim(gnt2)[1], by=1); rownames(gnt2) <- paste(snpindex2)
iindex2 = seq(from=1, to=dim(gnt2)[2], by=1); colnames(gnt2) <- paste0("indiv",iindex2,"@pop2", "")
sp2 <- cbind(inft2,gnt2); sp2 <- sp2[,-4];
mrgdata <- merge(sp1, sp2, by.x= c(1,2,3,4,5,6), by.y = c(1,2,3,4,5,6), all=TRUE)
colnames(mrgdata)[4] <- "selection"
mrgdata
mrgdata
mrgdata <- merge(sp1, sp2, by.x= c(1,2,3,4,5,6), by.y = c(1,2,3,4,5,6), all=TRUE)
mrgdata <- merge(sp1, sp2, by.x= c(1,2,3,4,5,6), by.y = c(1,2,3,4,5,6), all=TRUE)
mrgdata
mrgdata <- mrgdata[,-3]
mrgdata
colnames(mrgdata)[4] <- "selection"
mrgdata
mrgdata[is.na(mrgdata)] <- "11"
mn <- matrix(data = NA, nrow = dim(mrgdata)[1], ncol = 1)
tm <- mrgdata[,-c(1,2,3,4,5)]
for(i in 1:length(mn)){
s <- sum(tm[i,] == 11)
mn[i] <- s
}
numcol = dim(tm)[2]
rm <- ifelse(mn < numcol & mn !=0, TRUE, FALSE)
newdata <- mrgdata[rm, ]
newdata
inft1
mrgdata
