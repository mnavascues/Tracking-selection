print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("text", x = -64.4, y = -64.67, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.4, y = -64.725550, yend = -64.67, colour = "lightblue", size=.5)
)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.4, y = -64.725550, yend = -64.67, colour = "lightblue", size=.5) +
annotate("text", x = -64.4, y = -64.67, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.4, y = -64.725550, yend = -64.67, colour = "grey", size=.3) +
annotate("text", x = -64.4, y = -64.67, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.4, y = -64.725550, yend = -64.67, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.67, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.38, y = -64.725550, yend = -64.65, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.67, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.4, y = -64.725550, yend = -64.69, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.67, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.4, y = -64.725550, yend = -64.69, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.69, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.15, y = -64.8, label = "Humble Pinguin Island", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30") +
annotate("segment", x = 64.085483, xend = -64.28, y = -64.764817, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.15, y = -64.8, label = "Humble Pinguin Island", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30") +
annotate("segment", x = 64.085483, xend = -64.1, y = -64.764817, yend = -64.78, colour = "grey30", size=.3) +
annotate("text", x = -64.15, y = -64.8, label = "Humble Pinguin Island", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30") +
annotate("segment", x = 64.085483, xend = -64.1, y = -64.764817, yend = -64.78, colour = "grey30", size=.3) +
annotate("text", x = -64.15, y = -64.8, label = "Humble Pinguin Island", size=3, colour="gray30")
print(mapf)
mapf<- map1 +
geom_point(aes(group=stdata$populations, colour=stdata$populations), colour=c("orange","blue")) +
labs(x ="Longitude", y="Latitude", colour="Populations") +
annotate("segment", x = -64.223267, xend = -64.28, y = -64.725550, yend = -64.74, colour = "grey30", size=.3) +
annotate("text", x = -64.4, y = -64.74, label = "Dream Island - D1", size=3, colour="gray30") +
annotate("segment", x = 64.085483, xend = -64.15, y = -64.764817, yend = -64.8, colour = "grey30", size=.3) +
annotate("text", x = -64.15, y = -64.8, label = "Humble Pinguin Island", size=3, colour="gray30")
print(mapf)
populations <- c("C1","C2","D1","D2","HD","HO", "HP")
longitude <- c(-63.96448,-63.9676,-64.223267,-64.2259,-64.08331,-64.08848,-64.085483)
latitude <- c(-64.7932,-64.79393,-64.725550,-64.72566,-64.76501,-64.76445,-64.764817)
stdata<-data.frame(populations=populations, lat=latitude, lon=longitude)
print(stdata)
basemap <- get_map(location=c(lon=mean(longitude),lat=mean(latitude)), zoom = 11, maptype='roadmap', source='google',crop=TRUE)
## ---- rcode_0_A
sessionInfo()$running
sessionInfo()$platform
R.version.string
.Platform$GUI
## ---- rcode_0_B
#install.packages(c("RgoogleMaps","ggplot2","ggmap"))
library("RgoogleMaps")
library("ggplot2")
library("ggmap")
library("grid")
basemap <- get_map(location=c(lon=mean(longitude),lat=mean(latitude)), zoom = 11, maptype='roadmap', source='google',crop=TRUE)
map0 <- ggmap(basemap)
map0
map1 <- ggmap(basemap, extent='panel', base_layer=ggplot(data=stdata, aes(x=longitude, y=latitude)))
map1
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("#d53e4f","#f46d43","#fee08b","#ffffbf","#66c2a5","#3288bd","#5e4fa2"),size=2,alpha=1/2) +
labs(x="Longitude", y="Latitude")
print(mapf)
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("#d53e4f","#f46d43","#fee08b","#ffffbf","#66c2a5","#3288bd","#5e4fa2"),size=2) +
labs(x="Longitude", y="Latitude")
print(mapf)
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("#d53e4f","#f46d43","#fee08b","#ffffbf","#66c2a5","#3288bd","#5e4fa2"),size=3) +
labs(x="Longitude", y="Latitude")
print(mapf)
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("#d53e4f","#f46d43","#fee08b","#ffffbf","#66c2a5","#3288bd","#5e4fa2"),size=2.5) +
labs(x="Longitude", y="Latitude")
print(mapf)
pdf("Belgica_Amplicon_collections.pdf")
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("#d53e4f","#f46d43","#fee08b","#ffffbf","#66c2a5","#3288bd","#5e4fa2"),size=2.5) +
labs(x="Longitude", y="Latitude")
print(mapf)
dev.off()
dir()
?get_map
basemap <- get_map(location=c(lon=mean(longitude),lat=mean(latitude)), zoom = 11, maptype='satellite', source='google',crop=TRUE)
map0 <- ggmap(basemap)
map0
basemap <- get_map(location=c(lon=mean(longitude),lat=mean(latitude)), zoom = 11, maptype='terrain', source='google',crop=TRUE)
map0 <- ggmap(basemap)
map0
map1 <- ggmap(basemap, extent='panel', base_layer=ggplot(data=stdata, aes(x=longitude, y=latitude)))
map1
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("#d53e4f","#f46d43","#fee08b","#ffffbf","#66c2a5","#3288bd","#5e4fa2"),size=2.5) +
labs(x="Longitude", y="Latitude")
print(mapf)
pdf("Belgica_Amplicon_collections.pdf")
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("#d53e4f","#f46d43","#fee08b","#ffffbf","#66c2a5","#3288bd","#5e4fa2"),size=2.5) +
labs(x="Longitude", y="Latitude")
print(mapf)
dev.off()
populations <- c("D1", "HP")
longitude <- c(-64.223267,-64.085483)
latitude <- c(-64.725550,-64.764817)
stdata<-data.frame(populations=populations, lat=latitude, lon=longitude)
print(stdata)
basemap <- get_map(location=c(lon=mean(longitude),lat=mean(latitude)), zoom = 8, maptype="terrain", source="google",crop=TRUE)
map0 <- ggmap(basemap)
map0
map1 <- ggmap(basemap, extent='panel', base_layer=ggplot(data=stdata, aes(x=longitude, y=latitude)))
map1
pdf("Belgica_WGS_collections_D1_HP.pdf")
mapf<- map1 +
geom_point(aes(colour=factor(stdata$populations)),colour=c("orange","blue"),size=2,alpha=3/5) +
labs(x="Longitude", y="Latitude") +
annotate("segment", x = -64.223267, xend = -65, y = -64.725550, yend = -64.8, colour = "grey40", size=.3) +
annotate("text", x = -65, y = -64.82, label = "Dream Island site 1 - D1", size=3, colour="gray40") +
annotate("segment", x = -64.085483, xend = -64.4, y = -64.764817, yend = -65, colour = "grey40", size=.3) +
annotate("text", x = -64.4, y = -65.02, label = "Humble Island Penguin - HP", size=3, colour="gray40")
print(mapf)
dev.off()
?paste
10021/10
N_size <- as.integer(runif(10, 10, 150));
N_size
N_size <- as.integer(runif(10, 10, 150));
if ( N_size > 100 )
cat(paste("Ne bigger than N"));
else
at(paste("Ne smaller than N"));
n = 100
if ( n >= 100 )
cat(paste("Ne equals or bigger than N"));
else
at(paste("Ne smaller than N"));
if ( n >= 100 ) {
cat(paste("Ne equals or bigger than N"));
else
cat(paste("Ne smaller than N"));
}
if ( n >= 100 ) {
cat(paste("Ne equals or bigger than N"))
else
cat(paste("Ne smaller than N")
}
if (n >= 100) cat(paste("Ne equals or bigger than N")) else cat(paste("Ne smaller than N")
if (n >= 100) cat(paste("Ne equals or bigger than N")) else cat(paste("Ne smaller than N")
)
if ( n >= 100 ) cat(paste("Ne equals or bigger than N")) else cat(paste("Ne smaller than N"))
n = 33
if ( n >= 100 ) cat(paste("Ne equals or bigger than N")) else cat(paste("Ne smaller than N"))
if ( N_size[N_size >= 100] ) cat(paste("Ne equals or bigger than N")) else cat(paste("Ne smaller than N"))
if ( any(N_size >= 100) ) cat(paste("Ne equals or bigger than N")) else cat(paste("Ne smaller than N"))
for (n in 1:length(N_size)){
if ( n >= 100 ) cat(paste("Ne equals or bigger than N")) else cat(paste("Ne smaller than N"))
}
for (n in 1:length(N_size)){
if ( n >= 100 ) cat(paste("Ne equals or bigger than N \n")) else cat(paste("Ne smaller than N \n"))
}
N_size
N_size
N_size <- as.integer(runif(10, 10, 150));
N_size
for (n in 1:length(N_size)){
if ( n >= 100 ) cat(paste("Ne equals or bigger than N \n")) else cat(paste("Ne smaller than N \n"))
}
n
N_size
1:length(N_size)
N_size <- as.integer(runif(3, 100, 300));
for (n in 1:length(N_size)){
cat(paste("You simulated sample",n,"of size N =", N_size[n],"\n"));
};
for (n in 1:length(N_size)){
if ( n >= 100 ) cat(paste("Ne equals or bigger than N \n")) else cat(paste("Ne smaller than N \n"));
};
N_size
for (n in 1:length(N_size)){
if ( N_size[n] >= 100 ) cat(paste("Ne equals or bigger than N \n")) else cat(paste("Ne smaller than N \n"));
};
N_size <- as.integer(runif(10, 10, 150));
for (n in 1:length(N_size)){
if ( N_size[n] >= 100 ) cat(paste("Ne equals or bigger than N \n")) else cat(paste("Ne smaller than N \n"));
};
for (n in 1:length(N_size)){
if ( N_size[n] >= 100 ){
cat(paste("Ne equals or bigger than N \n"))
} else {
cat(paste("Ne smaller than N \n"))
}
}
system.time(for (n in 1:length(N_size)){
if ( N_size[n] >= 100 ){
cat(paste("Ne equals or bigger than N \n"))
} else {
cat(paste("Ne smaller than N \n"))
}
})
N_size <- as.integer(runif(1000, 10, 500));
system.time(for (n in 1:length(N_size)){
if ( N_size[n] >= 100 ){
cat(paste("Ne equals or bigger than N \n"))
} else {
cat(paste("Ne smaller than N \n"))
}
})
ifelse(N_size >= 100, cat(paste("Ne equals or bigger than N \n")), cat(paste("Ne smaller than N \n")))
N_size
ifelse(N_size >= 100, cat(paste("Ne equals or bigger than N \n")), cat(paste("Ne smaller than N \n")))
ifelse(N_size >= 100, paste("Ne equals or bigger than N \n"), paste("Ne smaller than N \n"))
system.time(ifelse(N_size >= 100, paste("Ne equals or bigger than N \n"), paste("Ne smaller than N \n")))
system.time(for (n in 1:length(N_size)){
if ( N_size[n] >= 100 ){
paste("Ne equals or bigger than N \n")
} else {
paste("Ne smaller than N \n")
}
})
system.time(for (n in 1:length(N_size)){
if ( N_size[n] >= 100 ){
cat(paste("Ne equals or bigger than N \n"))
} else {
cat(paste("Ne smaller than N \n"))
}
}) # In this case I need cat()
system.time(ifelse(N_size >= 100,
paste("Ne equals or bigger than N \n"),
paste("Ne smaller than N \n"))
)
ifelse(N_size >= 100,
paste("Ne equals or bigger than N \n"),
paste("Ne smaller than N \n"))
y <- ifelse(N_size >= 100,
paste("Ne equals or bigger than N \n"),
paste("Ne smaller than N \n"))
length(y)
system.time(for (n in 1:length(N_size)){
y <- if ( N_size[n] >= 100 ){
cat(paste("Ne equals or bigger than N \n"))
} else {
cat(paste("Ne smaller than N \n"))
}
}) # In this case I need cat()
system.time(for (n in 1:length(N_size)){
y1 <- if ( N_size[n] >= 100 ){
cat(paste("Ne equals or bigger than N \n"))
} else {
cat(paste("Ne smaller than N \n"))
}
}) # In this case I need cat()
system.time(y2 <- ifelse(N_size >= 100,
paste("Ne equals or bigger than N \n"),
paste("Ne smaller than N \n"))
)
length(c(y1,y2))
length(y1)
system.time(for (n in 1:length(N_size)){
y1 <- if ( N_size[n] >= 100 ){
paste("Ne equals or bigger than N \n")
} else {
paste("Ne smaller than N \n")
}
}) # In this case I need cat()
system.time(y2 <- ifelse(N_size >= 100,
paste("Ne equals or bigger than N \n"),
paste("Ne smaller than N \n"))
)
length(y1)
system.time(for (n in 1:length(N_size)){
y[n] <- if ( N_size[n] >= 100 ){
paste("Ne equals or bigger than N \n")
} else {
paste("Ne smaller than N \n")
}
}) # In this case I need cat()
system.time(y2 <- ifelse(N_size >= 100,
paste("Ne equals or bigger than N \n"),
paste("Ne smaller than N \n"))
)
length(y1)
y1 <- rep(NA, 1000)
system.time(for (n in 1:length(N_size)){
y[n] <- if ( N_size[n] >= 100 ){
paste("Ne equals or bigger than N \n")
} else {
paste("Ne smaller than N \n")
}
}) # In this case I need cat()
system.time(y2 <- ifelse(N_size >= 100,
paste("Ne equals or bigger than N \n"),
paste("Ne smaller than N \n"))
)
length(y1)
length(y2)
dir()
getwd()
match(working_dir,getwd()
)
working_dir <- "/Users/vitorpavinato/Documents/My_repositories/Tracking-selection/SLiM_in_R"
match(working_dir,getwd())
?match
if (is.na(match(working_dir,getwd()))){
setwd(working_dir)
}
getwd()
save(recordSessionInfo,file="results/sessionInfo.RData");
recordSessionInfo <- sessionInfo();
working_dir <- "/Users/vitorpavinato/Documents/My_repositories/Tracking-selection/SLiM_in_R"
if (is.na(match(working_dir,getwd()))){
setwd(working_dir)
}
save(recordSessionInfo,file="results/sessionInfo.RData");
recordSessionInfo <- sessionInfo();
working_dir <- "/Users/vitorpavinato/Documents/My_repositories/Tracking-selection/SLiM_in_R"
if (is.na(match(working_dir,getwd()))){
setwd(working_dir)
} else {
print("Working directory already set up")
}
save(recordSessionInfo,file="results/sessionInfo.RData");
save.image(file = "results/workspaceFile.RData");
source("src/create_slim_infile.r");
for (n in 1:length(N_size)){
cat(paste("You simulated sample",n,"of size N =", N_size[n],"\n"));
};
N_size <- as.integer(runif(10, 500, 1000));
for (n in 1:length(N_size)){
cat(paste("You simulated sample",n,"of size N =", N_size[n],"\n"));
};
if (file.exists(dir('infiles/', pattern = '.slim$', full.names = TRUE))){
file_removed <- file.remove(dir('infiles/', pattern = '.slim$', full.names = TRUE))
}
for (f in length(dir('infiles/', pattern = '.slim$', full.names = TRUE))){
if (file.exists(dir('infiles/', pattern = '.slim$', full.names = TRUE))){
file_removed <- file.remove(dir('infiles/', pattern = '.slim$', full.names = TRUE))
}
}
?ifelse
ifelse(file.exists(dir('infiles/', pattern = '.slim$', full.names = TRUE)),
file_removed <- file.remove(dir('infiles/', pattern = '.slim$', full.names = TRUE), NULL))
model1(ne = N_size,
filename = 'infile_slim',
folder = 'infiles/');  ## ate aqui esta ok;
ifelse(file.exists(dir('infiles/', pattern = '.slim$', full.names = TRUE)),
file_removed <- file.remove(dir('infiles/', pattern = '.slim$', full.names = TRUE), NULL))
file.exists()
?file.exists()
file.exists(dir('infiles/', pattern = '.slim$', full.names = TRUE))
model1(ne = N_size,
filename = 'infile_slim',
folder = 'infiles/');  ## ate aqui esta ok;
file.exists(dir('infiles/', pattern = '.slim$', full.names = TRUE))
ifelse(file.exists(dir('infiles/', pattern = '.slim$', full.names = TRUE)),
file.remove(dir('infiles/', pattern = '.slim$', full.names = TRUE)), NULL)
model1(ne = N_size,
filename = 'infile_slim',
folder = 'infiles/');  ## ate aqui esta ok;
ifelse(file.exists(dir('data/', pattern = '$output_', full.names = TRUE)),
file.remove(dir('data/', pattern = '$output_', full.names = TRUE)), NULL)
ifelse(file.exists(dir('data/', pattern = 'output_', full.names = TRUE)),
file.remove(dir('data/', pattern = 'output_', full.names = TRUE)), NULL)
source("src/slim.r");
random_seeds <- as.integer(runif(length(N_size), 100000, 900000));
ifelse(file.exists(dir('data/', pattern = 'output_', full.names = TRUE)),
file.remove(dir('data/', pattern = 'output_', full.names = TRUE)), NULL)
slim(    parm = N_size,
seed = random_seeds,
filename = 'outfile_N_size',
folder = 'data/',
infile = 'infile_N_size');
slim(    parm = N_size,
seed = random_seeds,
filename = 'outfile_N_size',
folder = 'infiles/',
infile = 'infile_N_size');
source("src/slim.r");
slim(    parm = N_size,
seed = random_seeds,
filename = 'outfile_slim',
folder = 'infiles/',
infile = 'infile_slim');
source("src/slim.r");
?system2
source("src/slim.r");
source("src/create_slim_infile.r");
N_size <- as.integer(runif(10, 500, 1000));
for (n in 1:length(N_size)){
cat(paste("You simulated sample",n,"of size N =", N_size[n],"\n"));
};
ifelse(file.exists(dir("infiles/", pattern = ".slim$", full.names = TRUE)),
file.remove(dir("infiles/", pattern = ".slim$", full.names = TRUE)), NULL)
model1(      ne = N_size,
filename = "infile_slim",
folder = "infiles/");
source("src/slim.r");
random_seeds <- as.integer(runif(length(N_size), 100000, 900000));
ifelse(file.exists(dir('data/', pattern = "output_", full.names = TRUE)),
file.remove(dir('data/', pattern = "output_", full.names = TRUE)), NULL)
slim(     parm = N_size,
seed = random_seeds,
filename = 'outfile_slim',
folderout = 'data/',
infile = 'infile_slim',
folderin = 'infiles/');
ifelse(file.exists(dir('data/', pattern = "output_", full.names = TRUE)),
file.remove(dir('data/', pattern = "output_", full.names = TRUE)), NULL)
slimclean(    parm = N_size,
seed = random_seeds,
infile = 'infile_slim',
folderin = 'infiles/');
ifelse(file.exists(dir('data/', pattern = "output_", full.names = TRUE)),
file.remove(dir('data/', pattern = "output_", full.names = TRUE)), NULL)
system.time(slim(     parm = N_size,
seed = random_seeds,
filename = 'outfile_slim',
folderout = 'data/',
infile = 'infile_slim',
folderin = 'infiles/'));
ifelse(file.exists(dir('data/', pattern = "output_", full.names = TRUE)),
file.remove(dir('data/', pattern = "output_", full.names = TRUE)), NULL)
system.time(slimclean(    parm = N_size,
seed = random_seeds,
infile = 'infile_slim',
folderin = 'infiles/'));
infot1 <- read.table("/data/output_slim_N_520_mutInfo_t1.txt", header = TRUE)
dir()
infot1 <- read.table("data/output_slim_N_520_mutInfo_t1.txt", header = TRUE)
infot1
genot1 <- read.table("data/output_slim_N_520_genotypes_t1.txt", header = FALSE)
genot1
dim(infot1)
dim(genot1)
genot1 <- t(genot1)
dim(genot1)
length(genot1)
length(genot1[,1])
length(genot1[1,])
??concatenate
?seq
length(genot1[1,])
seq(from=1, to=length(genot1[1,]), by=1)
index = seq(from=1, to=length(genot1[1,]), by=1)
paste("indiv",index,"@pop1")
paste("indiv",index,"@pop1", "")
paste0("indiv",index,"@pop1", "")
genot1
colnames(genot1) <- paste0("indiv",index,"@pop1", "")
genot1
c(infot1,genot1)
cbind(infot1,genot1)
